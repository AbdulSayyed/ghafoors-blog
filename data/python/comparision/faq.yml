- title: Comparison of Python Fundamentals with Everyday English
  content: |
    | **Term**          | **Python (Programming)**                                                                                     | **English (Everyday Language)**                                                                                  |
    |-------------------|-------------------------------------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------------------|
    | **Literals**      | Fixed values in Python that represent data, such as numbers (`42`), strings (`"hello"`), or booleans (`True`). | Words or phrases that have a specific, unchanging meaning, like "apple" means a fruit and "42" is the number 42. |
    | **Axioms**        | Basic, self-evident truths in programming, such as "Python code is executed line by line."                  | Common sense rules or principles, like "the sun rises in the east."                                             |
    | **Statements**    | Instructions in Python, like `print("Hello")`, that tell the program what to do.                            | Sentences that communicate something, like "Please open the door."                                               |
    | **Expressions**   | Combinations of values and operators that Python evaluates, e.g., `2 + 2` becomes `4`.                     | Simple calculations or ideas, like "5 + 5 = 10" or "if it rains, take an umbrella."                              |
    | **Operators**     | Symbols like `+`, `-`, `*` that perform operations on data, e.g., `3 * 4 = 12`.                            | Actions or signs we use in math or logic, like `+` means "add" or `and` means "both conditions apply."           |
    | **Variables**     | Containers that store data values, e.g., `x = 10` assigns `10` to `x`.                                      | Labels or placeholders, like a name tag that represents someone, e.g., "This chair belongs to Sarah."            |
    | **Functions**     | Blocks of reusable code that perform specific tasks, e.g., `len("apple")` gives `5`.                       | Tools or methods to get things done, like using a coffee machine to make coffee.                                 |
    | **Keywords**      | Reserved words in Python like `if`, `else`, `for` that have special meanings and uses.                     | Essential phrases in communication, like "yes" or "no," that have specific implications.                         |
    | **Syntax**        | Rules that define how Python code should be written, e.g., indentation for blocks of code.                 | Grammar rules in a language, like capitalizing the first letter of a sentence or ending it with a period.         |
    | **Semantics**     | The meaning behind the code, e.g., `x = x + 1` increases the value of `x` by `1`.                          | The meaning behind words or sentences, like understanding that "raining cats and dogs" means "raining heavily."  |
    | **Code Block**    | A group of statements that perform a specific task, often grouped by indentation.                          | A paragraph or section of text grouped together to focus on one idea or action.                                  |

- title: Example Comparison
  content: |
    | **Example**       | **Python**                                                   | **English**                                                 |
    |-------------------|-------------------------------------------------------------|------------------------------------------------------------|
    | **Literal**       | `42`                                                        | "The number 42."                                           |
    | **Expression**    | `5 + 3`                                                     | "Adding 5 and 3 gives 8."                                  |
    | **Statement**     | `print("Hello")`                                            | "Say the word 'Hello.'"                                    |
    | **Function**      | `len("hello")` gives `5`                                    | "Count the letters in the word 'hello' to find 5."         |
    | **Variable**      | `name = "Alice"`                                            | "Assign the label 'Alice' to the person you're addressing."|
